input {
    udp {
        port => 5500
        type => "forti_log"
        tags => ["fortigate"]
		codec => plain { charset=>"UTF-8" }
    }
}
filter {
    if [type] == "forti_log" {
        ## Separamos la cabecera syslog del mensaje y nos quedamos con el mensaje
        grok {
            match => ["message", "%{SYSLOG5424PRI:syslog_index}%{GREEDYDATA:message}"]
            overwrite => [ "message" ]
            tag_on_failure => [ "forti_grok_failure" ]
        }
        ## Debido a que FortiGate envia los datos como clave=valor,clave2=valor2, separamos los campos y los valores
        kv {
            source => "message"
            value_split => "="
            field_split => ","
        }
        ## Renombrado y conversión de variables
        mutate {
            add_field => { "temp_time" => "%{date} %{time}" }
            rename => { "type" => "ftg_type" }
            rename => { "subtype" => "ftg_subtype" }
            add_field => { "type" => "forti_log" }
            convert => { "rcvdbyte" => "integer" }
            convert => { "sentbyte" => "integer" }
        }
        ## Generación del campo timestamp con la Timezone local
        date {
            match => [ "temp_time", "YYYY-MM-dd HH:mm:ss" ]
            timezone => "Europe/Madrid"
            target => "@timestamp"
        }
        
        # Finalmente eliminamos los datos que no nos interesa integrar en el ELK
        mutate {
            remove_field => ["syslog_index","syslog5424_pri","path","temp_time","service","date","time","sentpkt","rcvdpkt","log_id","message","poluuid"]
        }
	}
}
output {
    if "fortigate" in [tags] {
		elasticsearch {
			hosts => []
			index => "fortigate-%{+YYYY.MM.dd}"	
			user => ""
			password => ""
		}
    }
}
